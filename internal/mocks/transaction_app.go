// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/app/transaction/transaction.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	entity "github.com/garoque/backend-code-challenge-snapfi/internal/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockAppTransactionInterface is a mock of AppTransactionInterface interface.
type MockAppTransactionInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAppTransactionInterfaceMockRecorder
}

// MockAppTransactionInterfaceMockRecorder is the mock recorder for MockAppTransactionInterface.
type MockAppTransactionInterfaceMockRecorder struct {
	mock *MockAppTransactionInterface
}

// NewMockAppTransactionInterface creates a new mock instance.
func NewMockAppTransactionInterface(ctrl *gomock.Controller) *MockAppTransactionInterface {
	mock := &MockAppTransactionInterface{ctrl: ctrl}
	mock.recorder = &MockAppTransactionInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAppTransactionInterface) EXPECT() *MockAppTransactionInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockAppTransactionInterface) Create(ctx context.Context, transaction *entity.Transaction) (*entity.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, transaction)
	ret0, _ := ret[0].(*entity.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockAppTransactionInterfaceMockRecorder) Create(ctx, transaction interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockAppTransactionInterface)(nil).Create), ctx, transaction)
}

// IncreaseBalanceUser mocks base method.
func (m *MockAppTransactionInterface) IncreaseBalanceUser(ctx context.Context, transaction *entity.TransactionIncreaseBalanceUser) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IncreaseBalanceUser", ctx, transaction)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IncreaseBalanceUser indicates an expected call of IncreaseBalanceUser.
func (mr *MockAppTransactionInterfaceMockRecorder) IncreaseBalanceUser(ctx, transaction interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncreaseBalanceUser", reflect.TypeOf((*MockAppTransactionInterface)(nil).IncreaseBalanceUser), ctx, transaction)
}
